Dynamic Programming is a method used in mathematics and computer science to solve complex problems 
by breaking them down into simpler subproblems. By solving each subproblem only once and storing
 the results, it avoids redundant computations, leading to more efficient solutions for a wide 
 range of problems.

 why is dp?
 * to avoid extra time 
 * also extra storage 
 * extra calulations (repeated calculations)

 Identify Subproblems: Divide the main problem into smaller, independent subproblems.

Store Solutions: Solve each subproblem and store the solution in a table or array.

Build Up Solutions: Use the stored solutions to build up the solution to the main problem.

Avoid Redundancy: By storing solutions, DP ensures that each subproblem is solved only once, reducing computation time.


when to use the dp ;
* while finding the optimal solutions
* while overlapping is there is problem